:EEG Classification model
    _________________________________________________________________
    Layer (type)                 Output Shape              Param #
    =================================================================
    Input data                   (44367, 14, 32, 1) --> pytorch(44367, 1, 14, 32)
    _________________________________________________________________
    batch_normalization_1 (Batch (None, 14, 32, 1)         4
    _________________________________________________________________
    conv2d_1 (Conv2D)            (None, 14, 29, 32)        160
    _________________________________________________________________
    conv2d_2 (Conv2D)            (None, 1, 29, 25)         11225
    _________________________________________________________________
    max_pooling2d_1 (MaxPooling2 (None, 1, 9, 25)          0
    _________________________________________________________________
    conv2d_3 (Conv2D)            (None, 50, 6, 1)          5050
    _________________________________________________________________
    max_pooling2d_2 (MaxPooling2 (None, 50, 2, 1)          0
    _________________________________________________________________
    conv2d_4 (Conv2D)            (None, 1, 1, 100)         10100
    _________________________________________________________________
    flatten_1 (Flatten)          (None, 100)               0
    _________________________________________________________________
    batch_normalization_2 (Batch (None, 100)               400
    _________________________________________________________________
    dense_1 (Dense)              (None, 100)               10100
    _________________________________________________________________
    batch_normalization_3 (Batch (None, 100)               400
    _________________________________________________________________
    dense_2 (Dense)              (None, 10)                1010
    =================================================================
    Total params: 38,449
    Trainable params: 38,047
    Non-trainable params: 402
    _________________________________________________________________
    None

:Discriminator RGB
    Model: "model_1"
    __________________________________________________________________________________________________
    Layer (type)                    Output Shape         Param #     Connected to
    ==================================================================================================
    input_1 (InputLayer)            (None, 64, 64, 3)    0
    __________________________________________________________________________________________________
    conv2d_1 (Conv2D)               (None, 31, 31, 16)   448         input_1[0][0]
    __________________________________________________________________________________________________
    leaky_re_lu_1 (LeakyReLU)       (None, 31, 31, 16)   0           conv2d_1[0][0]
    __________________________________________________________________________________________________
    dropout_1 (Dropout)             (None, 31, 31, 16)   0           leaky_re_lu_1[0][0]
    __________________________________________________________________________________________________
    batch_normalization_1 (BatchNor (None, 31, 31, 16)   64          dropout_1[0][0]
    __________________________________________________________________________________________________
    conv2d_2 (Conv2D)               (None, 29, 29, 32)   4640        batch_normalization_1[0][0]
    __________________________________________________________________________________________________
    leaky_re_lu_2 (LeakyReLU)       (None, 29, 29, 32)   0           conv2d_2[0][0]
    __________________________________________________________________________________________________
    dropout_2 (Dropout)             (None, 29, 29, 32)   0           leaky_re_lu_2[0][0]
    __________________________________________________________________________________________________
    batch_normalization_2 (BatchNor (None, 29, 29, 32)   128         dropout_2[0][0]
    __________________________________________________________________________________________________
    conv2d_3 (Conv2D)               (None, 14, 14, 64)   18496       batch_normalization_2[0][0]
    __________________________________________________________________________________________________
    leaky_re_lu_3 (LeakyReLU)       (None, 14, 14, 64)   0           conv2d_3[0][0]
    __________________________________________________________________________________________________
    dropout_3 (Dropout)             (None, 14, 14, 64)   0           leaky_re_lu_3[0][0]
    __________________________________________________________________________________________________
    batch_normalization_3 (BatchNor (None, 14, 14, 64)   256         dropout_3[0][0]
    __________________________________________________________________________________________________
    conv2d_4 (Conv2D)               (None, 12, 12, 128)  73856       batch_normalization_3[0][0]
    __________________________________________________________________________________________________
    leaky_re_lu_4 (LeakyReLU)       (None, 12, 12, 128)  0           conv2d_4[0][0]
    __________________________________________________________________________________________________
    dropout_4 (Dropout)             (None, 12, 12, 128)  0           leaky_re_lu_4[0][0]
    __________________________________________________________________________________________________
    batch_normalization_4 (BatchNor (None, 12, 12, 128)  512         dropout_4[0][0]
    __________________________________________________________________________________________________
    conv2d_5 (Conv2D)               (None, 5, 5, 256)    295168      batch_normalization_4[0][0]
    __________________________________________________________________________________________________
    leaky_re_lu_5 (LeakyReLU)       (None, 5, 5, 256)    0           conv2d_5[0][0]
    __________________________________________________________________________________________________
    dropout_5 (Dropout)             (None, 5, 5, 256)    0           leaky_re_lu_5[0][0]
    __________________________________________________________________________________________________
    batch_normalization_5 (BatchNor (None, 5, 5, 256)    1024        dropout_5[0][0]
    __________________________________________________________________________________________________
    conv2d_6 (Conv2D)               (None, 3, 3, 512)    1180160     batch_normalization_5[0][0]
    __________________________________________________________________________________________________
    leaky_re_lu_6 (LeakyReLU)       (None, 3, 3, 512)    0           conv2d_6[0][0]
    __________________________________________________________________________________________________
    dropout_6 (Dropout)             (None, 3, 3, 512)    0           leaky_re_lu_6[0][0]
    __________________________________________________________________________________________________
    flatten_1 (Flatten)             (None, 4608)         0           dropout_6[0][0]
    __________________________________________________________________________________________________
    dense_1 (Dense)                 (None, 1)            4609        flatten_1[0][0]
    __________________________________________________________________________________________________
    sequential_1 (Sequential)       (None, 10)           1862570     input_1[0][0]
    ==================================================================================================
    Total params: 3,441,931
    Trainable params: 1,578,369
    Non-trainable params: 1,863,562
    __________________________________________________________________________________________________
    None

:Generator RGB
    Model: "model_2"
    __________________________________________________________________________________________________
    Layer (type)                    Output Shape         Param #     Connected to
    ==================================================================================================
    input_2 (InputLayer)            (None, 100)          0
    __________________________________________________________________________________________________
    mo_g_layer_1 (MoGLayer)         (None, 100)          200         input_2[0][0]
    __________________________________________________________________________________________________
    dense_2 (Dense)                 (None, 100)          10100       mo_g_layer_1[0][0]
    __________________________________________________________________________________________________
    input_3 (InputLayer)            (None, 100)          0
    __________________________________________________________________________________________________
    multiply_1 (Multiply)           (None, 100)          0           dense_2[0][0]
                                                                     input_3[0][0]
    __________________________________________________________________________________________________
    batch_normalization_6 (BatchNor (None, 100)          400         multiply_1[0][0]
    __________________________________________________________________________________________________
    dense_3 (Dense)                 (None, 8192)         827392      batch_normalization_6[0][0]
    __________________________________________________________________________________________________
    reshape_1 (Reshape)             (None, 4, 4, 512)    0           dense_3[0][0]
    __________________________________________________________________________________________________
    batch_normalization_7 (BatchNor (None, 4, 4, 512)    2048        reshape_1[0][0]
    __________________________________________________________________________________________________
    conv2d_transpose_1 (Conv2DTrans (None, 8, 8, 256)    3277056     batch_normalization_7[0][0]
    __________________________________________________________________________________________________
    batch_normalization_8 (BatchNor (None, 8, 8, 256)    1024        conv2d_transpose_1[0][0]
    __________________________________________________________________________________________________
    conv2d_transpose_2 (Conv2DTrans (None, 16, 16, 128)  819328      batch_normalization_8[0][0]
    __________________________________________________________________________________________________
    batch_normalization_9 (BatchNor (None, 16, 16, 128)  512         conv2d_transpose_2[0][0]
    __________________________________________________________________________________________________
    conv2d_transpose_3 (Conv2DTrans (None, 32, 32, 64)   204864      batch_normalization_9[0][0]
    __________________________________________________________________________________________________
    batch_normalization_10 (BatchNo (None, 32, 32, 64)   256         conv2d_transpose_3[0][0]
    __________________________________________________________________________________________________
    conv2d_transpose_4 (Conv2DTrans (None, 64, 64, 3)    4803        batch_normalization_10[0][0]
    __________________________________________________________________________________________________
    activation_1 (Activation)       (None, 64, 64, 3)    0           conv2d_transpose_4[0][0]
    ==================================================================================================
    Total params: 5,147,983
    Trainable params: 5,145,863
    Non-trainable params: 2,120
    __________________________________________________________________________________________________
    None

(Hin −1)×stride[0]−2×padding[0]+dilation[0]×(kernel_size[0]−1)+output_padding[0]+1
 # ((4 - 1) * 2) - (2*1) + 1 * (5-1) + 0 + 1
 # 6 - 0 + 0 + 4 + 1 = 11 - 2 - 1 =  8

:VGG16 Model
    _________________________________________________________________
    Layer (type)                 Output Shape              Param #
    =================================================================
    conv2d_1 (Conv2D)            (None, 64, 64, 32)        896
    _________________________________________________________________
    activation_1 (ReLU)          (None, 64, 64, 32)        0
    _________________________________________________________________
    conv2d_2 (Conv2D)            (None, 62, 62, 32)        9248
    _________________________________________________________________
    activation_2 (ReLU)          (None, 62, 62, 32)        0
    _________________________________________________________________
    max_pooling2d_1 (MaxPooling2 (None, 31, 31, 32)        0
    _________________________________________________________________
    dropout_1 (Dropout)          (None, 31, 31, 32)        0
    _________________________________________________________________
    conv2d_3 (Conv2D)            (None, 31, 31, 64)        18496
    _________________________________________________________________
    activation_3 (ReLU)          (None, 31, 31, 64)        0
    _________________________________________________________________
    conv2d_4 (Conv2D)            (None, 29, 29, 64)        36928
    _________________________________________________________________
    activation_4 (ReLU)          (None, 29, 29, 64)        0
    _________________________________________________________________
    max_pooling2d_2 (MaxPooling2 (None, 14, 14, 64)        0
    _________________________________________________________________
    dropout_2 (Dropout)          (None, 14, 14, 64)        0
    _________________________________________________________________
    conv2d_5 (Conv2D)            (None, 14, 14, 128)       73856
    _________________________________________________________________
    activation_5 (ReLU)          (None, 14, 14, 128)       0
    _________________________________________________________________
    conv2d_6 (Conv2D)            (None, 12, 12, 128)       147584
    _________________________________________________________________
    activation_6 (ReLU)          (None, 12, 12, 128)       0
    _________________________________________________________________
    max_pooling2d_3 (MaxPooling2 (None, 6, 6, 128)         0
    _________________________________________________________________
    dropout_3 (Dropout)          (None, 6, 6, 128)         0
    _________________________________________________________________
    conv2d_7 (Conv2D)            (None, 6, 6, 256)         295168
    _________________________________________________________________
    activation_7 (ReLU)          (None, 6, 6, 256)         0
    _________________________________________________________________
    conv2d_8 (Conv2D)            (None, 4, 4, 256)         590080
    _________________________________________________________________
    activation_8 (ReLU)          (None, 4, 4, 256)         0
    _________________________________________________________________
    max_pooling2d_4 (MaxPooling2 (None, 2, 2, 256)         0
    _________________________________________________________________
    dropout_4 (Dropout)          (None, 2, 2, 256)         0
    _________________________________________________________________
    flatten_1 (Flatten)          (None, 1024)              0
    _________________________________________________________________
    dense_1 (Dense)              (None, 512)               524800
    _________________________________________________________________
    activation_9 (ReLU)          (None, 512)               0
    _________________________________________________________________
    dropout_5 (Dropout)          (None, 512)               0
    _________________________________________________________________
    dense_2 (Dense)              (None, 256)               131328
    _________________________________________________________________
    activation_10 (ReLU)         (None, 256)               0
    _________________________________________________________________
    dropout_6 (Dropout)          (None, 256)               0
    _________________________________________________________________
    dense_3 (Dense)              (None, 128)               32896
    _________________________________________________________________
    activation_11 (ReLU)         (None, 128)               0
    _________________________________________________________________
    dropout_7 (Dropout)          (None, 128)               0
    _________________________________________________________________
    dense_4 (Dense)              (None, 10)                1290
    _________________________________________________________________
    activation_12 (SoftMax)      (None, 10)                0
    =================================================================
    Total params: 3,725,140
    Trainable params: 1,862,570
    Non-trainable params: 1,862,570
    _________________________________________________________________
    None

    Additional INFO
    ================
	{'name': 'conv2d_1', 'trainable': True, 'batch_input_shape': (None, 64, 64, 3), 'dtype': 'float32', 'filters': 32, 'kernel_size': (3, 3), 'strides': (1, 1), 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': (1, 1), 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_1', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'conv2d_2', 'trainable': True, 'dtype': 'float32', 'filters': 32, 'kernel_size': (3, 3), 'strides': (1, 1), 'padding': 'valid', 'data_format': 'channels_last', 'dilation_rate': (1, 1), 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_2', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'max_pooling2d_1', 'trainable': True, 'dtype': 'float32', 'pool_size': (2, 2), 'padding': 'valid', 'strides': (2, 2), 'data_format': 'channels_last'}
	{'name': 'dropout_1', 'trainable': True, 'dtype': 'float32', 'rate': 0.25, 'noise_shape': None, 'seed': None}
	{'name': 'conv2d_3', 'trainable': True, 'dtype': 'float32', 'filters': 64, 'kernel_size': (3, 3), 'strides': (1, 1), 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': (1, 1), 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_3', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'conv2d_4', 'trainable': True, 'dtype': 'float32', 'filters': 64, 'kernel_size': (3, 3), 'strides': (1, 1), 'padding': 'valid', 'data_format': 'channels_last', 'dilation_rate': (1, 1), 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_4', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'max_pooling2d_2', 'trainable': True, 'dtype': 'float32', 'pool_size': (2, 2), 'padding': 'valid', 'strides': (2, 2), 'data_format': 'channels_last'}
	{'name': 'dropout_2', 'trainable': True, 'dtype': 'float32', 'rate': 0.25, 'noise_shape': None, 'seed': None}
	{'name': 'conv2d_5', 'trainable': True, 'dtype': 'float32', 'filters': 128, 'kernel_size': (3, 3), 'strides': (1, 1), 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': (1, 1), 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_5', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'conv2d_6', 'trainable': True, 'dtype': 'float32', 'filters': 128, 'kernel_size': (3, 3), 'strides': (1, 1), 'padding': 'valid', 'data_format': 'channels_last', 'dilation_rate': (1, 1), 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_6', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'max_pooling2d_3', 'trainable': True, 'dtype': 'float32', 'pool_size': (2, 2), 'padding': 'valid', 'strides': (2, 2), 'data_format': 'channels_last'}
	{'name': 'dropout_3', 'trainable': True, 'dtype': 'float32', 'rate': 0.25, 'noise_shape': None, 'seed': None}
	{'name': 'conv2d_7', 'trainable': True, 'dtype': 'float32', 'filters': 256, 'kernel_size': (3, 3), 'strides': (1, 1), 'padding': 'same', 'data_format': 'channels_last', 'dilation_rate': (1, 1), 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_7', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'conv2d_8', 'trainable': True, 'dtype': 'float32', 'filters': 256, 'kernel_size': (3, 3), 'strides': (1, 1), 'padding': 'valid', 'data_format': 'channels_last', 'dilation_rate': (1, 1), 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_8', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'max_pooling2d_4', 'trainable': True, 'dtype': 'float32', 'pool_size': (2, 2), 'padding': 'valid', 'strides': (2, 2), 'data_format': 'channels_last'}
	{'name': 'dropout_4', 'trainable': True, 'dtype': 'float32', 'rate': 0.25, 'noise_shape': None, 'seed': None}
	{'name': 'flatten_1', 'trainable': True, 'dtype': 'float32', 'data_format': 'channels_last'}
	{'name': 'dense_1', 'trainable': True, 'dtype': 'float32', 'units': 512, 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_9', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'dropout_5', 'trainable': True, 'dtype': 'float32', 'rate': 0.5, 'noise_shape': None, 'seed': None}
	{'name': 'dense_2', 'trainable': True, 'dtype': 'float32', 'units': 256, 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_10', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'dropout_6', 'trainable': True, 'dtype': 'float32', 'rate': 0.5, 'noise_shape': None, 'seed': None}
	{'name': 'dense_3', 'trainable': True, 'dtype': 'float32', 'units': 128, 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_11', 'trainable': True, 'dtype': 'float32', 'activation': 'relu'}
	{'name': 'dropout_7', 'trainable': True, 'dtype': 'float32', 'rate': 0.5, 'noise_shape': None, 'seed': None}
	{'name': 'dense_4', 'trainable': True, 'dtype': 'float32', 'units': 10, 'activation': 'linear', 'use_bias': True, 'kernel_initializer': {'class_name': 'VarianceScaling', 'config': {'scale': 1.0, 'mode': 'fan_avg', 'distribution': 'uniform', 'seed': None}}, 'bias_initializer': {'class_name': 'Zeros', 'config': {}}, 'kernel_regularizer': None, 'bias_regularizer': None, 'activity_regularizer': None, 'kernel_constraint': None, 'bias_constraint': None}
	{'name': 'activation_12', 'trainable': True, 'dtype': 'float32', 'activation': 'softmax'}


<Q>:
    - LINK : {
        https://medium.com/@himanshuxd/activation-functions-sigmoid-relu-leaky-relu-and-softmax-basics-for-neural-networks-and-deep-8d9c70eed91e
    }
    - What, Why, How relu
        - Leaky why (0.2), why in discriminator
            # Since sigmoid has limited range, the info can be loss
            # ReLU can cause the dying relu problem... where backproporgate and its become 0
            - 
        - ReLU why in generator
    - Why dropout p = 0.5, not 0.1
        - Too many dropout cause underfit?
    - What is the range of batchnorm?
        # momentum is : How much changing the estimated statistic X^ to new observed value Xt.
        - Diff normalization, stardardization
    - What is ConvTranspose2d
    - Cost function of GANs

<Recommend committee>:
    - Prof. MATT
    - Prof. Atthaphon (Pong)
